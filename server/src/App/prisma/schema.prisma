generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_APP")
}

model Appointments_OPD {
  id               BigInt          @id @default(autoincrement())
  patient_id       BigInt?
  report_id        BigInt
  doctor_id        Int?
  appointment_date DateTime        @db.Date
  appointment_time DateTime        @db.Time(0)
  appointment_type String?         @db.VarChar(10)
  status           String?         @db.VarChar(20)
  created_at       DateTime?       @default(now()) @db.Timestamp(0)
  updated_at       DateTime?       @default(now()) @db.Timestamp(0)
  Patients         Patients?       @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "appointments_opd_patient_id_foreign")
  report           report          @relation(fields: [report_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "appointments_opd_report_id_foreign")
  OPDTreatments    OPDTreatments[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Billing {
  id             BigInt        @id @default(autoincrement())
  patient_id     BigInt?
  treatment_id   BigInt
  type           String        @default("OPD") @db.VarChar(255)
  bill_date      DateTime      @db.Date
  total_amount   Decimal       @db.Decimal(10, 2)
  payment_status String?       @db.VarChar(20)
  created_at     DateTime?     @default(now()) @db.Timestamp(0)
  updated_at     DateTime?     @default(now()) @db.Timestamp(0)
  Patients       Patients?     @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "billing_patient_id_foreign")
  dailybill      dailybill[]
}

model DailyItemsList {
  id               BigInt        @id @default(autoincrement())
  ipd_admission_id BigInt
  item_id          BigInt
  record_date      DateTime      @db.Date
  day_id           BigInt
  item_category    String        @db.VarChar(100)
  item_name        String        @db.VarChar(255)
  item_quantity    String?       @db.VarChar(50)
  item_cost        Decimal?      @db.Decimal(10, 2)
  dailybill_id     BigInt
  created_at       DateTime?     @default(now()) @db.Timestamp(0)
  updated_at       DateTime?     @default(now()) @db.Timestamp(0)
  dailybill        dailybill     @relation(fields: [dailybill_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dailyitemslist_dailybill_id_foreign")
  DayItem          DayItem       @relation(fields: [day_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dailyitemslist_day_id_foreign")
  IPDAdmissions    IPDAdmissions @relation(fields: [ipd_admission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dailyitemslist_ipd_admission_id_foreign")
  item             item          @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dailyitemslist_item_id_foreign")
}

model DayItem {
  id               BigInt           @id @default(autoincrement())
  ipd_admission_id BigInt
  treatment_id     BigInt
  created_at       DateTime         @db.Timestamp(0)
  DailyItemsList   DailyItemsList[]
  IPDAdmissions    IPDAdmissions    @relation(fields: [ipd_admission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dayitem_ipd_admission_id_foreign")
  IPDTreatments    IPDTreatments    @relation(fields: [treatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dayitem_treatment_id_foreign")
  Ward             Ward[]
  dailybill        dailybill[]
}

model IPDAdmissions {
  id                                          BigInt           @id @default(autoincrement())
  patient_id                                  BigInt?
  report_id                                   BigInt
  discharge_date                              DateTime?        @db.Date
  diagnosis                                   String?
  status                                      String?          @db.VarChar(20)
  created_at                                  DateTime?        @default(now()) @db.Timestamp(0)
  updated_at                                  DateTime?        @default(now()) @db.Timestamp(0)
  DailyItemsList                              DailyItemsList[]
  DayItem                                     DayItem[]
  Patients_IPDAdmissions_patient_idToPatients Patients?        @relation("IPDAdmissions_patient_idToPatients", fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ipdadmissions_patient_id_foreign")
  report                                      report           @relation(fields: [report_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ipdadmissions_report_id_foreign")
  IPDTreatments                               IPDTreatments[]
  MainIntakeOutput                                MainIntakeOutput[]
  Patients_Patients_idToIPDAdmissions         Patients?        @relation("Patients_idToIPDAdmissions")
  SurgeryRecords                              SurgeryRecords[]
 MainVitalSigns                                  MainVitalSigns[]
  Ward                                        Ward[]
}

model IPDTreatments {
  id                BigInt           @id @default(autoincrement())
  petient_id        BigInt
  ipd_admission_id  BigInt?
  treatment_date    DateTime         @db.Date
  treatment_details String?
  created_at        DateTime?        @default(now()) @db.Timestamp(0)
  updated_at        DateTime?        @default(now()) @db.Timestamp(0)
  DayItem           DayItem[]
  IPDAdmissions     IPDAdmissions?   @relation(fields: [ipd_admission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ipdtreatments_ipd_admission_id_foreign")
  Patients          Patients         @relation(fields: [petient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ipdtreatments_petient_id_foreign")
  MainIntakeOutput   MainIntakeOutput[]
  MainMedicalReports MainMedicalReports?
  PatientMedication PatientMedication?
  SurgeryRecords    SurgeryRecords[]
  MainLabReports MainLabReports?
 MainVitalSigns      MainVitalSigns[]
  Ward              Ward?
  notes             notes[]
}
model MainIntakeOutput {
  id        BigInt         @id @default(autoincrement())
  ipd_admission_id BigInt?
  treatment_id     BigInt
  record_date      DateTime       @db.Date
  created_at       DateTime?      @default(now()) @db.Timestamp(0)
  updated_at       DateTime?      @default(now()) @db.Timestamp(0)
  IntakeOutput IntakeOutput[]
  IPDAdmissions    IPDAdmissions? @relation(fields: [ipd_admission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MainIntakeOutput_ipd_admission_id_foreign")
  IPDTreatments    IPDTreatments  @relation(fields: [treatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MainIntakeOutput_treatment_id_foreign")
}
model IntakeOutput {
  id               BigInt         @id @default(autoincrement())
  record_date      DateTime       @db.Date
  MainIntakeOutput_id BigInt
  intake_time      Int?
  intake_nature    Int?
  intake_amount    Int?
  intake_total     Decimal?       @db.Decimal(8, 2)
  output_time      Int?
  output_nature    Int?
  output_amount    Int?
  output_total     Decimal?       @db.Decimal(8, 2)
  created_at       DateTime?      @default(now()) @db.Timestamp(0)
  updated_at       DateTime?      @default(now()) @db.Timestamp(0)
    MainIntakeOutput    MainIntakeOutput  @relation(fields: [MainIntakeOutput_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "IntakeOutput_MainIntakeOutput_id_foreign")

}

model MainLabReports {
  id             BigInt      @id @default(autoincrement())
  ODPtreatment_id  BigInt? @unique
  IPDtreatment_id  BigInt?  @unique
  ANCtreatment_id  BigInt?    @unique 
  status            String?             @db.VarChar(20)
  type            String           @default("OPD") @db.VarChar(255)
  description    String?     @db.VarChar(255)
  start_date     DateTime?   @db.Date
  end_date       DateTime?   @db.Date
  LabReports  LabReports[]
  OPDTreatments OPDTreatments? @relation(fields: [ODPtreatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  IPDTreatments IPDTreatments? @relation(fields: [IPDtreatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

}
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model LabReports {
  id                BigInt              @id @default(autoincrement())
  patient_id        BigInt?
  doctor_id         Int?
  MainLabReports_id BigInt
  test_name         String?             @db.VarChar(255)
  test_date         DateTime?           @db.Date
  test_result       String?
  test_file         String?
  lab_technician    String?             @db.VarChar(255)
  status            String?             @db.VarChar(20)
  created_at        DateTime?           @default(now()) @db.Timestamp(0)
  updated_at        DateTime?           @default(now()) @db.Timestamp(0)
  Staff             Staff?              @relation(fields: [doctor_id], references: [Staff_id], onDelete: NoAction, onUpdate: NoAction, map: "labreports_doctor_id_foreign")
  MainLabReports             MainLabReports?              @relation(fields: [MainLabReports_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "labreports_MainLabReports_id_foreign")
  Patients          Patients?           @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "labreports_patient_id_foreign")
  LabTestDetails    LabTestDetails[]
  TechnicianReports TechnicianReports[]
}
model LabTestDetails {
  detail_id       BigInt      @id
  report_id       BigInt?
  parameter_name  String?     @db.VarChar(255)
  parameter_value String?     @db.VarChar(100)
  normal_range    String?     @db.VarChar(100)
  created_at      DateTime?   @default(now()) @db.Timestamp(0)
  updated_at      DateTime?   @default(now()) @db.Timestamp(0)
  LabReports      LabReports? @relation(fields: [report_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "labtestdetails_report_id_foreign")
}

model MainMedicalReports {
  id             BigInt      @id @default(autoincrement())
  ODPtreatment_id  BigInt? @unique
  IPDtreatment_id  BigInt?  @unique
  ANCtreatment_id  BigInt?    @unique 
  status            String?             @db.VarChar(20)
  type            String           @default("OPD") @db.VarChar(255)
  description    String?     @db.VarChar(255)
  start_date     DateTime?   @db.Date
  end_date       DateTime?   @db.Date
  MedicalReports  MedicalReports[]
  OPDTreatments OPDTreatments? @relation(fields: [ODPtreatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  IPDTreatments IPDTreatments? @relation(fields: [IPDtreatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

}
model MedicalReports {
  report_id          BigInt          @id @default(autoincrement())
  doctor_id          Int?
  MainReports_id  BigInt?
  report_type        String?         @db.VarChar(255)
  report_description String?
  report_date        DateTime?       @db.Date
  report_file        String?
  status             String?         @db.VarChar(20)
  created_at         DateTime?       @default(now()) @db.Timestamp(0)
  updated_at         DateTime?       @default(now()) @db.Timestamp(0)
  Staff              Staff?          @relation(fields: [doctor_id], references: [Staff_id], onDelete: NoAction, onUpdate: NoAction, map: "medicalreports_doctor_id_foreign")
  MainMedicalReports      MainMedicalReports?  @relation(fields: [MainReports_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "medicalreports_MainMedicalReports_id_foreign")
  ReportResults      ReportResults[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Medications {
  id              BigInt           @id @default(autoincrement())
  treatment_id    BigInt
  medicine_id     BigInt
  medication_name String           @db.VarChar(100)
  dosage          String?          @db.VarChar(50)
  frequency       String?          @db.VarChar(50)
  start_date      DateTime         @db.Date
  end_date        DateTime?        @db.Date
  instructions    String?
  created_at      DateTime?        @default(now()) @db.Timestamp(0)
  updated_at      DateTime?        @default(now()) @db.Timestamp(0)
 medication_list medication_list  @relation(fields: [medicine_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "medications_medicine_id_foreign")
 MainMedication MainMedication  @relation(fields: [treatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "medications_treatment_id_foreign")
}
model MainMedication {
  id             BigInt      @id @default(autoincrement())
  PatientMedication_id BigInt
  SurgeryRecords_id BigInt?
  treatment_type  String      @db.VarChar(10) 
  doctor_id       Int?
  type            String           @default("OPD") @db.VarChar(255)
  description    String?     @db.VarChar(255)
  test_file       String?
  total_quantity   BigInt

  start_date     DateTime?   @db.Date
  end_date       DateTime?   @db.Date
  created_at      DateTime?        @default(now()) @db.Timestamp(0)
  updated_at      DateTime?        @default(now()) @db.Timestamp(0)
SurgeryRecords SurgeryRecords? @relation(fields: [SurgeryRecords_id], references: [surgery_id],onDelete: NoAction, onUpdate: NoAction, map: "MainMedication_SurgeryRecords_id_foreign")
Staff Staff? @relation(fields: [doctor_id], references: [Staff_id],onDelete: NoAction, onUpdate: NoAction, map: "MainMedication_doctor_id_foreign")
PatientMedication PatientMedication @relation(fields: [PatientMedication_id], references: [id],onDelete: NoAction, onUpdate: NoAction, map: "MainMedication_PatientMedication_id_foreign")
Medications Medications[] 
}
model PatientMedication {
  id             BigInt      @id @default(autoincrement())
  ODPtreatment_id  BigInt? @unique
  IPDtreatment_id  BigInt? @unique
  ANCtreatment_id  BigInt?   @unique
  doctor_id       Int?
  type            String           @default("OPD") @db.VarChar(255)
  description    String?     @db.VarChar(255)
  start_date     DateTime?   @db.Date
  end_date       DateTime?   @db.Date
  MainMedication  MainMedication[]
  OPDTreatments OPDTreatments? @relation(fields: [ODPtreatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  IPDTreatments IPDTreatments? @relation(fields: [IPDtreatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

}
model OPDTreatments {
  id               BigInt            @id @default(autoincrement())
  appointment_id   BigInt?
  patient_id       BigInt?
  doctor_id        Int?
  diagnosis        String?
  treatment_plan   String?
  report_file      String?
  follow_up_date   DateTime?         @db.Date
  created_at       DateTime?         @default(now()) @db.Timestamp(0)
  updated_at       DateTime?         @default(now()) @db.Timestamp(0)
  MainMedicalReports MainMedicalReports?
  PatientMedication PatientMedication?
  MainLabReports    MainLabReports?           
  Appointments_OPD Appointments_OPD? @relation(fields: [appointment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "opdtreatments_appointment_id_foreign")
  Staff            Staff?            @relation(fields: [doctor_id], references: [Staff_id], onDelete: NoAction, onUpdate: NoAction, map: "opdtreatments_doctor_id_foreign")
}

model Patients {
  id                                               BigInt             @id @default(autoincrement())
  full_name                                        String             @db.VarChar(100)
  date_of_birth                                    DateTime           @db.Date
  gender                                           String             @db.VarChar(10)
  blood_group                                      String?            @db.VarChar(5)
  mobile_number                                    String             @unique @db.VarChar(15)
  address                                          String?
  email                                            String?            @unique @db.VarChar(100)
  created_at                                       DateTime?          @default(now()) @db.Timestamp(0)
  updated_at                                       DateTime?          @default(now()) @db.Timestamp(0)
  Appointments_OPD                                 Appointments_OPD[]
  Billing                                          Billing[]
  IPDAdmissions_IPDAdmissions_patient_idToPatients IPDAdmissions[]    @relation("IPDAdmissions_patient_idToPatients")
  IPDTreatments                                    IPDTreatments[]
  LabReports                                       LabReports[]
  IPDAdmissions_Patients_idToIPDAdmissions         IPDAdmissions      @relation("Patients_idToIPDAdmissions", fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "patients_id_foreign")
  SurgeryRecords                                   SurgeryRecords[]
  report                                           report[]
}

model ReportResults {
  result_id         BigInt          @id @default(autoincrement())
  report_id         BigInt?
  observation_name  String?         @db.VarChar(255)
  observation_value String?
  created_at        DateTime?       @default(now()) @db.Timestamp(0)
  updated_at        DateTime?       @default(now()) @db.Timestamp(0)
  MedicalReports    MedicalReports? @relation(fields: [report_id], references: [report_id], onDelete: NoAction, onUpdate: NoAction, map: "reportresults_report_id_foreign")
}

model Setting {
  id           BigInt    @id @default(autoincrement())
  domain       String?   @db.VarChar(500)
  icon         String?   @db.VarChar(500)
  hospital     String?   @db.VarChar(500)
  current_plan DateTime? @db.Date
  feature      String?   @db.VarChar(500)
  created_at   DateTime? @default(now()) @db.Timestamp(0)
  updated_at   DateTime? @default(now()) @db.Timestamp(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Staff {
  Staff_id       Int           @id @default(autoincrement())    
  full_name      String           @db.VarChar(100)
  specialization String?          @db.VarChar(100)
  user           String?          @db.VarChar(200)
  password       String?          @db.VarChar(200)
  type           String           @default("doctor") @db.VarChar(255)
  contact_number String           @unique @db.VarChar(15)
  email          String?          @unique @db.VarChar(100)
  qualifications String?
  department     String?          @db.VarChar(100)
  created_at     DateTime?        @default(now()) @db.Timestamp(0)
  updated_at     DateTime?        @default(now()) @db.Timestamp(0)
  LabReports     LabReports[]
  MedicalReports MedicalReports[]
  MainMedications MainMedication[]
  OPDTreatments  OPDTreatments[]
  SurgeryRecords SurgeryRecords[]
  notes          notes[]
}

model SurgeryRecords {
  surgery_id               BigInt        @id @default(autoincrement())
  patient_id               BigInt?
  treatment_id             BigInt
  ipd_admission_id         BigInt
  doctor_id                Int
  surgery_type             String        @db.VarChar(255)
  surgery_date             DateTime      @db.Date
  start_time               DateTime      @db.Time(0)
  end_time                 DateTime      @db.Time(0)
  operating_room           String?       @db.VarChar(50)
  team_members             BigInt
  anesthesia_type          String?       @db.VarChar(100)
  preop_diagnosis          String?
  postop_diagnosis         String?
  procedure_description    String?
  surgery_outcome          String?       @db.VarChar(100)
  complications            String?
  medications_administered String?
  blood_loss               String?       @db.VarChar(50)
  implants_used            String?
  recovery_notes           String?
  created_at               DateTime?     @default(now()) @db.Timestamp(0)
  updated_at               DateTime?     @default(now()) @db.Timestamp(0)
  MainMedication MainMedication[]
  Staff                    Staff        @relation(fields: [doctor_id], references: [Staff_id], onDelete: NoAction, onUpdate: NoAction, map: "surgeryrecords_doctor_id_foreign")
  IPDAdmissions            IPDAdmissions @relation(fields: [ipd_admission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "surgeryrecords_ipd_admission_id_foreign")
  Patients                 Patients?     @relation(fields: [patient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "surgeryrecords_patient_id_foreign")
  IPDTreatments            IPDTreatments @relation(fields: [treatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "surgeryrecords_treatment_id_foreign")
}

model TechnicianReports {
  technician_report_id BigInt      @id @default(autoincrement())
  report_id            BigInt?
  technician_id        BigInt?
  technician_notes     String?
  created_at           DateTime?   @default(now()) @db.Timestamp(0)
  updated_at           DateTime?   @default(now()) @db.Timestamp(0)
  LabReports           LabReports? @relation(fields: [report_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "technicianreports_report_id_foreign")
}

model MainVitalSigns {
  id        BigInt         @id @default(autoincrement())
  ipd_admission_id BigInt?
  treatment_id     BigInt
  record_date      DateTime       @db.Date
  created_at       DateTime?      @default(now()) @db.Timestamp(0)
  updated_at       DateTime?      @default(now()) @db.Timestamp(0)
  VitalSigns VitalSigns[]
  IPDAdmissions    IPDAdmissions? @relation(fields: [ipd_admission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MainVitalSigns_ipd_admission_id_foreign")
  IPDTreatments    IPDTreatments  @relation(fields: [treatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "MainVitalSigns_treatment_id_foreign")
}
model VitalSigns {
  id        BigInt         @id @default(autoincrement())
 MainVitalSigns_id  BigInt
  record_date      DateTime       @db.Date
  spo2             Int?
  temperature      Int?
  blood_pressure   Int?
  pulse_rate       Int?
  respiratory_rate Int?
  created_at       DateTime?      @default(now()) @db.Timestamp(0)
  updated_at       DateTime?      @default(now()) @db.Timestamp(0)
  MainVitalSigns    MainVitalSigns? @relation(fields: [MainVitalSigns_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "VitalSigns_MainVitalSigns_id_foreign")
}

model Ward {
  id               BigInt        @id @default(autoincrement())
  dayitem_id       BigInt
  treatment_id     BigInt @unique
  ipd_admission_id BigInt
  transfer_date    DateTime      @db.Date
  transfer_time    DateTime      @db.Time(0)
  ward             String        @db.VarChar(100)
  room             String        @db.VarChar(100)
  bed              String        @db.VarChar(100)
  cost             String        @db.VarChar(200)
  transfer_reason  String?
  created_at       DateTime?     @default(now()) @db.Timestamp(0)
  updated_at       DateTime?     @default(now()) @db.Timestamp(0)
  DayItem          DayItem       @relation(fields: [dayitem_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ward_dailycost_id_foreign")
  IPDAdmissions    IPDAdmissions @relation(fields: [ipd_admission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ward_ipd_admission_id_foreign")
  IPDTreatments    IPDTreatments @relation(fields: [treatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  dailybill        dailybill[]
}

model dailybill {
  id             BigInt           @id @default(autoincrement())
  day            DateTime         @db.Date
  cost           BigInt
  finalbill_id   BigInt
  dailyCost_id   BigInt
  ward_id        BigInt
  created_at     DateTime         @db.Timestamp(0)
  DailyItemsList DailyItemsList[]
  DayItem        DayItem          @relation(fields: [dailyCost_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dailybill_dailycost_id_foreign")
  Billing        Billing          @relation(fields: [finalbill_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dailybill_finalbill_id_foreign")
  Ward           Ward             @relation(fields: [ward_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "dailybill_ward_id_foreign")
}

model item {
  id             BigInt           @id @default(autoincrement())
  name           String           @db.VarChar(255)
  category       String           @db.VarChar(255)
  description    String
  cost           BigInt
  created_at     BigInt
  DailyItemsList DailyItemsList[]
}

model medication_list {
  id          BigInt        @id @default(autoincrement())
  name        String        @db.VarChar(255)
  type        String        @db.VarChar(255)
  Medications Medications[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notes {
  id            BigInt        @id @default(autoincrement())
  user_id       Int
  type          String        @default("doctor") @db.VarChar(255)
  notes         String
  treatment_id  BigInt
  create_at     DateTime      @db.Timestamp(0)
  IPDTreatments IPDTreatments @relation(fields: [treatment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "notes_treatment_id_foreign")
  Staff         Staff         @relation(fields: [user_id], references: [Staff_id], onDelete: NoAction, onUpdate: NoAction, map: "notes_user_id_foreign")
}

model report {
  id               BigInt             @id  @default(autoincrement())
  title            String
  department       String
  petient_id       BigInt
  created_at       DateTime           @db.Timestamp(0)
  Appointments_OPD Appointments_OPD[]
  IPDAdmissions    IPDAdmissions[]
  Patients         Patients           @relation(fields: [petient_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "report_petient_id_foreign")
}
